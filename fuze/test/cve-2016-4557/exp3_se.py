#!/usr/bin/python
from pwn import *
import sys
sys.path.append('/home/ww9210/develop/vminstance')
sys.path.append('/home/ww9210/develop/concolic_execution')
sys.path.append('/home/ww9210/develop/dataflowanalyzer')
import concolicexecutor
import vminstance
import dataflowanalyzer
import subprocess
import re
import random
import angr
import time

def test_4557(gdbport=random.randint(12000,13000)):
    start_time = time.time()
    context.update(arch = 'amd64')
    vm = vminstance.vmInstance(qemu_config_file = \
            '/home/ww9210/develop/kuafffp/poc_qemu_config/cve-2016-4557-inject-nokasan.cfg' \
            , gdb_deamon_port = gdbport\
            , log_filename = 'vm_log_4557_ce.txt'\
            , start_grace_time = 5\
            , two_cpus = True\
            )
    vm.run_gdb_deamon()
    vm.run()
    vm.connect()

    vm.s.put('/home/ww9210/develop/fse2018/test/4557_test/poc_release/exp3/exp3')

    sh = vm.s.shell('/bin/sh')
    sh.sendline('chmod +x ./exp3')
    #sh.interactive()

    gdb = dataflowanalyzer.DebuggerGdb(gdbport = gdbport, qemu_gdbport = vm.qemu_config.gdb_port\
            , vmlinux_path = vm.qemu_config.vmlinux_path)

    gdb.connectGdb()
    gdb.loadVmlinux()
    gdb.connectQemu()
    bpline = '/home/ww9210/kernels/linux-4.10-rc8-inject/fs/file.c:707'
    gdb.b(bpline)
    gdb.c()
    sh.sendline('./exp3')

    while True:
        gdb.catch()
        con=gdb.bt()
        print con
        if 'SYSC_lseek' in con and gdb.is_current_process('exp3'):
            break
        else:
            gdb.c()

    obj_base=gdb.get_reg('rdx')
    print 'uaf_obj base:',hex(obj_base)
    callbacks_to_monitor = []
    callbacks_to_monitor.append('kfree_call_rcu')
    function_call_to_disable = []
    function_call_to_disable.append(0xffffffff811bc037)  # call mutex_lock
    function_call_to_disable.append(0xffffffff811bc058)  # call mutex_unlock
    extra_bp=[]
    ce = concolicexecutor.ConcolicExecutor(vm.qemu_config.vmlinux_path)
    ce.setup(\
            qemu_port = vm.qemu_config.monitor_port\
            ,debug_after_address_concretization = False\
            ,use_custom_concretization_strategy_first = True\
            ,pause_on_read_from_symbolic_address = False\
            ,pause_on_write_to_symbolic_address = False\
            ,pause_on_uninit_write=False \
            ,pause_on_each_step = False\
            ,pause_on_write_to_uaf_object_primitive = False\
            ,execution_time_limit = 60*3\
            ,pause_on_control_flow_hijack = True\
            ,concretization_range = 2\
            ,callback_functions_to_monitor = callbacks_to_monitor\
            ,expected_start_rip = 0xffffffff811bb1b2\
            ,assigned_start_time = start_time\
            ,function_call_to_disable = function_call_to_disable\
            ,detect_rcu_free = True\
            ,additional_symbolic_registers = ['r14']\
            ,extra_bp=extra_bp\
            )
    remove_opts={angr.options.CONSERVATIVE_READ_STRATEGY}
    ce.run(uaf_object_base = obj_base, uaf_object_size = 0xf8, do_rop = True, switch_cpu = True, remove_opts = remove_opts)
    vm.shutdown()

if __name__ == '__main__':
    test_4557()

